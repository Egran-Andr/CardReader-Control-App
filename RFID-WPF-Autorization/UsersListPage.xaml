<Page x:Class="RFID_WPF_Autorization.UsersListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:local="clr-namespace:RFID_WPF_Autorization"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
        Title="UsersListPage"
       xmlns:sys="clr-namespace:System;assembly=mscorlib"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" Loaded="Page_Loaded">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="6*"></RowDefinition>
        </Grid.RowDefinitions>
        <materialDesign:TransitioningContent>
            <materialDesign:TransitioningContent.OpeningEffects>
                <materialDesign:TransitionEffect Kind="FadeIn" />
                <materialDesign:TransitionEffect Kind="ExpandIn" />
            </materialDesign:TransitioningContent.OpeningEffects>
            <Grid Grid.Row="0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button  x:Name ="BackButton" Grid.Column="0" HorizontalAlignment="Left"
        Style="{StaticResource MaterialDesignIconButton}"
        ToolTip="Назад"
        Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" Click="BackButton_Click">
                    <materialDesign:PackIcon Kind="ArrowLeftCircle"  />
                </Button>
                <ComboBox x:Name ="CurrentWorkplace" BorderThickness="2" materialDesign:HintAssist.Hint="Фильтр отдела" ToolTip="Фильтр по отделу"  VerticalAlignment="Stretch" Margin="10,10,10,10" HorizontalAlignment="Stretch" Width="Auto" FontSize="20"  Grid.Column="1" SizeChanged="CurrentWorkplace_SizeChanged" SelectionChanged="CurrentWorkplace_SelectionChanged"  />
                <Button  x:Name ="AddUserButton" Grid.Column="2" HorizontalAlignment="Right"
        Style="{StaticResource MaterialDesignIconButton}"
        ToolTip="Добавить сотрудника"
        Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" Click="AddUserButton_Click">
                    <materialDesign:PackIcon Kind="AccountMultiplePlus"  />
                </Button>
                <Button  x:Name ="SettingsButton" Grid.Column="3" HorizontalAlignment="Right"
        Style="{StaticResource MaterialDesignIconButton}"
        ToolTip="Настройки"
        Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" Click="SettingsButton_Click">
                    <materialDesign:PackIcon Kind="Settings"  />
                </Button>
            </Grid>
        </materialDesign:TransitioningContent>


        <materialDesign:TransitioningContent OpeningEffectsOffset="{materialDesign:IndexedItemOffsetMultiplier 0:0:1.25}" Grid.Row="1" >
            <materialDesign:TransitioningContent.OpeningEffects>
                <materialDesign:TransitionEffect Kind="FadeIn" />
                <materialDesign:TransitionEffect Kind="SlideInFromLeft" />
            </materialDesign:TransitioningContent.OpeningEffects>
            <Border BorderBrush="Black"
            BorderThickness="2"
            VerticalAlignment="Center"
            CornerRadius="5">

                <StackPanel Margin="5"
                    Orientation="Horizontal">

                    <materialDesign:PackIcon Kind="AccountSearch" Height="30" Width="30" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                    <TextBox x:Name="FioText"
    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
    VerticalAlignment="Top"
                             HorizontalAlignment="Stretch"
    TextWrapping="NoWrap"
                        MinWidth="1200"
    materialDesign:HintAssist.Hint="Поиск" TextChanged="TextBox_TextChanged" />
                </StackPanel>
            </Border>

        </materialDesign:TransitioningContent>

        <materialDesign:TransitioningContent OpeningEffectsOffset="{materialDesign:IndexedItemOffsetMultiplier 0:0:1.25}" Grid.Row="2" >
            <materialDesign:TransitioningContent.OpeningEffects>
                <materialDesign:TransitionEffect Kind="FadeIn" />
                <materialDesign:TransitionEffect Kind="SlideInFromLeft" />
            </materialDesign:TransitioningContent.OpeningEffects>
            <DataGrid Grid.Row="1" Name="UserDataGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False" ColumnWidth="*" SelectionChanged="UserDataGrid_SelectionChanged" >
                <DataGrid.Columns>

                    <DataGridTemplateColumn Header= "Image" Width="1*">
                        <DataGridTemplateColumn.CellTemplate>

                            <DataTemplate>
                                <Image Source="{Binding photopath}" Height="100"  />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="ФИО" Width="3*"
                                    Binding="{Binding workerfio}" FontSize="15" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" CellStyle="{StaticResource MaterialDesignDataGridCell}"/>
                    <DataGridTextColumn Header="Место работы" Binding="{Binding workplacename}" Width="2*" FontSize="20" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" CellStyle="{StaticResource MaterialDesignDataGridCell}"/>
                    <DataGridTextColumn Header="Дата рождения" Binding="{Binding datebirth,StringFormat=\{0:dd.MM.yy\}}" Width="2*" FontSize="20" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" CellStyle="{StaticResource MaterialDesignDataGridCell}"/>
                </DataGrid.Columns>
            </DataGrid>
        </materialDesign:TransitioningContent>

        <materialDesign:Card
  UniformCornerRadius="14"
  RenderTransformOrigin=".5,.5"
  Padding="4" Grid.Row="2"  VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10">
            <ProgressBar
    x:Name="AnimatedProgressInCard"
    Style="{StaticResource MaterialDesignCircularProgressBar}" />
            <materialDesign:Card.RenderTransform>
                <TransformGroup>
                    <ScaleTransform
        x:Name="ScaleTransform"
        ScaleX="0"
        ScaleY="0" />
                </TransformGroup>
            </materialDesign:Card.RenderTransform>
            <materialDesign:Card.Style>
                <Style
      TargetType="materialDesign:Card"
      BasedOn="{StaticResource {x:Type materialDesign:Card}}">
                    <Style.Resources>
                        <Storyboard
          x:Key="FadeIn"
          FillBehavior="HoldEnd">
                            <DoubleAnimationUsingKeyFrames
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame
              Value="0" />
                                <EasingDoubleKeyFrame
              Value="1"
              KeyTime="0:0:0.8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase
                  EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame
              Value="0" />
                                <EasingDoubleKeyFrame
              Value="1"
              KeyTime="0:0:0.8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase
                  EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard
          x:Key="FadeOut">
                            <DoubleAnimationUsingKeyFrames
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame
              Value="1" />
                                <EasingDoubleKeyFrame
              Value="0"
              KeyTime="0:0:0.8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase
                  EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame
              Value="1" />
                                <EasingDoubleKeyFrame
              Value="0"
              KeyTime="0:0:0.8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase
                  EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </Style.Resources>
                    <Style.Triggers>
                        <DataTrigger
          Binding="{Binding ElementName=AnimatedProgressInCard, Path=Value}"
          Value="20">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard
              BeginStoryboardName="FadeOut" />
                                <BeginStoryboard
              Storyboard="{StaticResource FadeIn}"
              Name="FadeIn" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger
          Binding="{Binding ElementName=AnimatedProgressInCard, Path=Value}"
          Value="100">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard
              BeginStoryboardName="FadeIn" />
                                <BeginStoryboard
              Storyboard="{StaticResource FadeOut}"
              Name="FadeOut" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>
        </materialDesign:Card>
    </Grid>
</Page>
    
